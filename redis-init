#!/bin/bash
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

#Debian defaults
NAME="redis-server"
DESC="redis server init script"

#Default dirs
CONFIG_DIR="/etc/redis/conf-enabled"

#Default binaries
DAEMON="/usr/bin/redis-server"
REDIS_CLI="/usr/bin/redis-cli"

REDIS_LIST=`ls $CONFIG_DIR | grep 'conf' | sed 's/\.conf$//'`

REDIS_USER="redis"

start()
{
#echo "Starting redis server: $DAEMON"
for REDIS in $REDIS_LIST
    do
        PIDFILE=`cat $CONFIG_DIR/$REDIS.conf | grep '^pidfile' | awk -F' ' '{print $2}'`
        # Create path for pid file it not exist and it chown to $REDIS_USER.
        # This is needed when pid file is stored under subdirectory of /var/run/
        # because /var/run/ in mounted as tmpfs and cleared after each server reboot.
        PIDDIR=`dirname $PIDFILE`
        if [ -n "$PIDDIR" ]; then
            if [ ! -d $PIDDIR ]; then
                mkdir -p $PIDDIR
                chown $REDIS_USER $PIDDIR
            fi
        fi

        DIRDIR=`cat $CONFIG_DIR/$REDIS.conf | grep '^dir' | awk -F' ' '{print $2}'`
        # Create path for `dir` path it not exist and it chown to $REDIS_USER.
        # because the RDB file can't be saved, the shutdown fails 
        if [ -n "$DIRDIR" ]; then
            if [ ! -d $DIRDIR ]; then
                mkdir -p $DIRDIR
                chown -R $REDIS_USER:$REDIS_USER $DIRDIR
            fi
        fi

        if start-stop-daemon --quiet --stop --signal 0 --pidfile $PIDFILE 2>/dev/null 1>/dev/null; then
            echo "Node $REDIS is already running, ignoring"
        else
            echo -n "Starting $REDIS:   "
            if start-stop-daemon --start --quiet --umask 007 --pidfile $PIDFILE --chuid redis:redis \
                --exec $DAEMON -- $CONFIG_DIR/$REDIS.conf
            then
                echo -n "Waiting for data to load..."
                    while [ `$REDIS_CLI info |grep 'loading:1'` ]
                    do
                        echo -n "."
                        sleep 1
                    done
                echo -e "\n$REDIS started."
            else
                echo "Failed to start $REDIS"
            fi
        fi
    done
}

stop()
{
echo "Stopping redis nodes: "
for REDIS in $REDIS_LIST
    do
        PIDFILE=`cat $CONFIG_DIR/$REDIS.conf | grep '^pidfile' | awk -F' ' '{print $2}'`
        if [ -e $PIDFILE ]; then
            echo "PID: $PIDFILE `cat $PIDFILE`"
            #REDIS_PORT=`cat $CONFIG_DIR/$REDIS.conf | grep '^port' | awk -F' ' '{print $2}'`
            #echo "Redis $REDIS listen on $REDIS_PORT with pid `cat $PIDFILE`"
            if start-stop-daemon --stop --retry 180 --signal 15 --quiet --oknodo --pidfile $PIDFILE --exec $DAEMON
            then
                echo $REDIS
            fi

            #$REDIS_CLI -p $REDIS_PORT shutdown
            #echo "Node $REDIS stopped"
            #rm -f $PIDFILE
        else
            echo "Pidfile $PIDFILE not found, assume that node $REDIS already stopped"
        fi
    done
RETVAL=1
echo ""
}


status_short()
{
PIDFILE=`cat $CONFIG_DIR/$1.conf | grep '^pidfile' | awk -F' ' '{print $2}'`
REDIS_PORT=`cat $CONFIG_DIR/$REDIS.conf | grep '^port' | awk -F' ' '{print $2}'`

if [ ! -e $PIDFILE ]; then
    echo "Node $REDIS stopped"
else
    echo -n "$1: "
    if start-stop-daemon --stop --quiet --signal 0 --pidfile ${PIDFILE}
    then
        echo on
        return 0
    else
        echo off
        return 1
    fi
fi
}

case "$1" in
    start)
        shift 1
        if [ "$*" ]; then
            case "$*" in
                [aA][lL][lL]);;
                *) REDIS_LIST="$@" ;;
            esac
        fi
        start $REDIS_LIST
        ;;
    stop)
        shift 1
        if [ "$*" ]; then
            case "$*" in
                [aA][lL][lL]);;
                *) REDIS_LIST="$@" ;;
            esac
        fi
        stop $REDIS_LIST
        ;;
    restart)
        shift 1
        if [ "$*" ];then
            case "$*" in
                [aA][lL][lL]);;
                *) REDIS_LIST="$@" ;;
            esac
        fi
        $0 stop $@
        sleep 2
        $0 start $@
        RETVAL=$?
        ;;
    status)
        shift 1
        if [ "x$*" != "x" ]; then REDIS_LIST="$@"; fi

        RETVALALL=0
        for REDIS in $REDIS_LIST; do
            status_short "$REDIS"
            RETVAL=$?
            RETVALALL=$(($RETVALALL+$RETVAL))
        done
        exit $RETVALALL
        ;;
    *)
        echo "Usage: /etc/init.d/redis-init {start|stop|restart|status} [node_config_name] " >&2
        exit 1
        ;;
esac
